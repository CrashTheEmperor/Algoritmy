#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include "TQueue.h"
#include "TStack.h"

int main(int argc, char* argv[]) {
	//struct TStack stack1 = { 0 };
	struct TStack stack1;
	stack_init(&stack1);
	struct TQueue queue1;
	queue_init(&queue1);

	char arr[10000];
	scanf("%[^\n]%*c", arr);

	int stringLength = 1337;
	for (int i = 0; arr[i] != '\0'; i++)
		stringLength = i + 1;

	for (int i = 0; i <= stringLength; i++) {
		if (arr[i] == ' ' || arr[i] == '\0') {
			struct TStackIterator StackIt = stack_iterator_begin(&stack1);
			struct TQueueIterator QueueIt = queue_iterator_begin(&queue1);
			bool palindrom = false;
			while (stack_iterator_is_valid(&StackIt) && queue_iterator_is_valid(&QueueIt)) {
				if (stack_iterator_value(&StackIt) == queue_iterator_value(&QueueIt)) {
					palindrom = true;
					stack_iterator_to_next(&StackIt);
					queue_iterator_to_next(&QueueIt);
				} else {
					palindrom = false;
					//StackIt.iStack = NULL;
					//QueueIt.iQueue = NULL;
					break;
				}
			}
			if (palindrom) {
				printf("Slovo: '");
				for (struct TQueueIterator it = queue_iterator_begin(&queue1); queue_iterator_is_valid(&it); queue_iterator_to_next(&it))
					printf("%c", queue_iterator_value(&it));
				printf("' je palindrom.\n");
			} else {
				printf("Slovo: '");
				for (struct TQueueIterator it = queue_iterator_begin(&queue1); queue_iterator_is_valid(&it); queue_iterator_to_next(&it))
					printf("%c", queue_iterator_value(&it));
				printf("' neni palindrom.\n");
			}
			stack_destroy(&stack1);
			queue_destroy(&queue1);
		} else {
			stack_push(&stack1, arr[i]);
			queue_push(&queue1, arr[i]);
		}
	}

	//for (struct TQueueIterator it = queue_iterator_begin(&queue1); queue_iterator_is_valid(&it); queue_iterator_to_next(&it))
		//printf("%c", queue_iterator_value(&it));

	stack_destroy(&stack1);
	queue_destroy(&queue1);

return 0;
}